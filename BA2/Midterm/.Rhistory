"\nMC-etimate using normal dist:", mc.estimate2)
#
# a)
fa = function(x){10*exp(-2*abs(x-5))}
n=10000
x = runif(n, 0, 10)
mc.estimate1 = mean(fa(x))
# b)
fb = function(x){exp(-2*abs(x-5)) / dnorm(x,5,1)}
n=10000
x = rnorm(n, 5, 1)
x.fb = fb(x)
x.fb = x.fb[x.fb>0 & x.fb<10]
mc.estimate2 = mean(x.fb)
# c)
cat("MC-etimate using uniform dist:", mc.estimate1,
"\nMC-etimate using normal dist:", mc.estimate2)
#
# a)
fa = function(x){10*exp(-2*abs(x-5))}
n=10000
x = runif(n, 0, 10)
mc.estimate1 = mean(fa(x))
# b)
fb = function(x){exp(-2*abs(x-5)) / dnorm(x,5,1)}
n=10000
x = rnorm(n, 5, 1)
x.fb = fb(x)
x.fb = x.fb[x.fb>0 & x.fb<10]
mc.estimate2 = mean(x.fb)
# c)
cat("MC-etimate using uniform dist:", mc.estimate1,
"\nMC-etimate using normal dist:", mc.estimate2)
#
# a)
fa = function(x){10*exp(-2*abs(x-5))}
n=10000
x = runif(n, 0, 10)
mc.estimate1 = mean(fa(x))
# b)
fb = function(x){exp(-2*abs(x-5)) / dnorm(x,5,1)}
n=10000
x = rnorm(n, 5, 1)
x.fb = fb(x)
x.fb = x.fb[x.fb>0 & x.fb<10]
mc.estimate2 = mean(x.fb)
# c)
cat("MC-etimate using uniform dist:", mc.estimate1,
"\nMC-etimate using normal dist:", mc.estimate2)
#
# a)
fa = function(x){10*exp(-2*abs(x-5))}
n=10000
x = runif(n, 0, 10)
mc.estimate1 = mean(fa(x))
# b)
fb = function(x){exp(-2*abs(x-5)) / dnorm(x,5,1)}
n=10000
x = rnorm(n, 5, 1)
x.fb = fb(x)
x.fb = x.fb[x.fb>0 & x.fb<10]
mc.estimate2 = mean(x.fb)
# c)
cat("MC-etimate using uniform dist:", mc.estimate1,
"\nMC-etimate using normal dist:", mc.estimate2)
#
# a)
fa = function(x){10*exp(-2*abs(x-5))}
n=10000
x = runif(n, 0, 10)
mc.estimate1 = mean(fa(x))
# b)
fb = function(x){exp(-2*abs(x-5)) / dnorm(x,5,1)}
n=10000
x = rnorm(n, 5, 1)
x.fb = fb(x)
x.fb = x.fb[x.fb>0 & x.fb<10]
mc.estimate2 = mean(x.fb)
# c)
cat("MC-etimate using uniform dist:", mc.estimate1,
"\nMC-etimate using normal dist:", mc.estimate2)
#
# a)
fa = function(x){10*exp(-2*abs(x-5))}
n=10000
x = runif(n, 0, 10)
mc.estimate1 = mean(fa(x))
# b)
fb = function(x){exp(-2*abs(x-5)) / dnorm(x,5,1)}
n=10000
x = rnorm(n, 5, 1)
x.fb = fb(x)
x.fb = x.fb[x.fb>0 & x.fb<10]
mc.estimate2 = mean(x.fb)
# c)
cat("MC-etimate using uniform dist:", mc.estimate1,
"\nMC-etimate using normal dist:", mc.estimate2)
#
# a)
fa = function(x){10*exp(-2*abs(x-5))}
n=10000
x = runif(n, 0, 10)
mc.estimate1 = mean(fa(x))
# b)
fb = function(x){exp(-2*abs(x-5)) / dnorm(x,5,1)}
n=10000
x = rnorm(n, 5, 1)
x.fb = fb(x)
x.fb = x.fb[x.fb>0 & x.fb<10]
mc.estimate2 = mean(x.fb)
# c)
cat("MC-etimate using uniform dist:", mc.estimate1,
"\nMC-etimate using normal dist:", mc.estimate2)
#
# a)
f.inv = function(x){sqrt(1/(1-x))}
n=10000
us = runif(n, 0, 1)
samples = f.inv(us)
hist(samples, prob=T, nclass = 25)
# b)
theta.samples = NULL
n=10000
for(i in 1:n){
# Draw theta & u
theta = runif(1, 0, pi/2)
u = runif(1,0,1)
# Accept theta if...
if(u <= sin(theta)){
theta.samples = append(theta.samples, theta)
}
}
hist(theta.samples, prob=T, nclass = 25)
x=c(1,2,3,4)
x[2:]
x[2:-1]
x[2:length(x)]
x=20
lambda=30
a=2
b=2
theta.samples = NULL
W.samples = NULL
n.samples = NULL
# Initialize the chain
theta = 1
W = 1
iter=2000
for(i in 1:iter){
# Draw theta from full-cond.
theta = rbeta(1, x+a, (W+x)-x+b)
# Draw W from full-cond.
W = rpois(1, (1-theta)*lambda)
# Append samples to list
theta.samples = append(theta.samples, theta)
n.samples = append(n.samples, W+x)
}
# Delete burn-in period
theta.samples = theta.samples[500:length(theta.samples)]
n.samples = theta.samples[500:length(n.samples)]
# Plot the distributions
par(mfrow(2,1))
hist(theta.samples, prob=T, nclass=25)
hist(n.samples, prob=T, nclass=25)
?par
# Plot the distributions
par(mfrow(1,2))
hist(theta.samples, prob=T, nclass=25)
hist(n.samples, prob=T, nclass=25)
par(mrow(1,2))
par(mrow=c(1,2))
hist(theta.samples, prob=T, nclass=25)
hist(n.samples, prob=T, nclass=25)
par(mfrow=c(1,2))
hist(theta.samples, prob=T, nclass=25)
hist(n.samples, prob=T, nclass=25)
# Initalize the chain
theta.t = 1
theta.samples = NULL
N = 10000 # num of iterations
for(i in 1:N){
# Draw sample from proporsal distribution
theta.star = rnorm(1,0,1)
# Calculate acceptance rate
alpha = (exp(-theta.star)*dnorm(theta.t, 0, 1)) / (exp(-theta.t)*dnorm(theta.star, 0, 1))
# Accept if...
if(log(runif(1)) < log(alpha)){
theta.t = theta.star
}
theta.samples = append(theta.samples, theta.t)
}
# Plot
par(mfrow=c(1,1))
hist(theta.samples, prob=T, nclass=25)
setwd('/home/tuomas/R/Projects/DATA.STAT.730/Midterm')
fn = "Midterm5.jag"
cat("
model{
# Unique linear models for each group
for(i in 1:9){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b11 + b12*(age[i]-60)
}
for(i in 10:18){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b21 + b22*(age[i]-60)
}
for(i in 19:27){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b31 + b32*(age[i]-60)
}
for(i in 28:36){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b41 + b42*(age[i]-60)
}
# Priors
b11 ~ dnorm(0, 0.01) # For group 1
b12 ~ dnorm(0, 0.01)
b21 ~ dnorm(0, 0.01) # For group 2
b22 ~ dnorm(0, 0.01)
b31 ~ dnorm(0, 0.01) # For group 3
b32 ~ dnorm(0, 0.01)
b41 ~ dnorm(0, 0.01) # For group 4
b42 ~ dnorm(0, 0.01)
}",
file=fn)
deaths = c(18,22,19,55,117,170,179,120,120,2,4,3,38,113,173,212,243,253,149,169,193,
576,1001,901,613,337,189,124,140,187,514,778,689,432,214,63)
age = c(40,45,50,55,60,65,70,75,80,40,45,50,55,60,65,70,75,80,40,45,50,55,60,65,70,75,
80,40,45,50,55,60,65,70,75,80)
n = c(656,359,249,632,1067,897,668,361,274,145,104,98,372,846,949,824,667,537,4531,
3030,2267,4682,6052,3880,2033,871,345,3410,2239,1851,3270,3791,2421,1195,436,113)
g = c(1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4)
smoking.data = list(y=deaths, age=age, n=n)
smoking.j = jags.model(file=fn, data=smoking.data, n.chains=3, n.adapt=2000)
smoking.par = c("b11","b12","b21","b22","b31","b32","b41","b42")
smoking.res = coda.samples(model=smoking.j, variable.names=smoking.par, n.iter=10000, thin=10)
summary(smoking.res)
# a)
setwd('/home/tuomas/R/Projects/DATA.STAT.730/Midterm')
fn = "Midterm5.jag"
cat("
model{
# Unique linear models for each group
for(i in 1:9){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b11 + b12*(age[i]-60)
}
for(i in 10:18){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b21 + b22*(age[i]-60)
}
for(i in 19:27){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b31 + b32*(age[i]-60)
}
for(i in 28:36){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b41 + b42*(age[i]-60)
}
# Priors
b11 ~ dnorm(0, 0.01) # For group 1
b12 ~ dnorm(0, 0.01)
b21 ~ dnorm(0, 0.01) # For group 2
b22 ~ dnorm(0, 0.01)
b31 ~ dnorm(0, 0.01) # For group 3
b32 ~ dnorm(0, 0.01)
b41 ~ dnorm(0, 0.01) # For group 4
b42 ~ dnorm(0, 0.01)
}",
file=fn)
deaths = c(18,22,19,55,117,170,179,120,120,2,4,3,38,113,173,212,243,253,149,169,193,
576,1001,901,613,337,189,124,140,187,514,778,689,432,214,63)
age = c(40,45,50,55,60,65,70,75,80,40,45,50,55,60,65,70,75,80,40,45,50,55,60,65,70,75,
80,40,45,50,55,60,65,70,75,80)
n = c(656,359,249,632,1067,897,668,361,274,145,104,98,372,846,949,824,667,537,4531,
3030,2267,4682,6052,3880,2033,871,345,3410,2239,1851,3270,3791,2421,1195,436,113)
g = c(1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4)
smoking.data = list(y=deaths, age=age, n=n)
smoking.j = jags.model(file=fn, data=smoking.data, n.chains=3, n.adapt=2000)
smoking.par = c("b11","b12","b21","b22","b31","b32","b41","b42")
smoking.res = coda.samples(model=smoking.j, variable.names=smoking.par, n.iter=10000, thin=10)
summary(smoking.res)
# a)
fa = function(x){10*exp(-2*abs(x-5))}
n=10000
x = runif(n, 0, 10)
mc.estimate1 = mean(fa(x))
# b)
fb = function(x){exp(-2*abs(x-5)) / dnorm(x,5,1)}
n=10000
x = rnorm(n, 5, 1)
x.fb = fb(x)
x.fb = x.fb[x.fb>0 & x.fb<10]
mc.estimate2 = mean(x.fb)
# c)
cat("MC-etimate using uniform dist:", mc.estimate1,
"\nMC-etimate using normal dist:", mc.estimate2)
# a)
f.inv = function(x){sqrt(1/(1-x))}
n=10000
us = runif(n, 0, 1)
samples = f.inv(us)
hist(samples, prob=T, nclass = 25)
# a)
f.inv = function(x){sqrt(1/(1-x))}
n=10000
us = runif(n, 0, 1)
samples = f.inv(us)
hist(samples, prob=T, nclass = 25)
# a)
f.inv = function(x){sqrt(1/(1-x))}
n=10000
us = runif(n, 0, 1)
samples = f.inv(us)
hist(samples, prob=T, nclass = 25)
theta.samples = NULL
n=10000
for(i in 1:n){
# Draw theta & u
theta = runif(1, 0, pi/2)
u = runif(1,0,1)
# Accept theta if...
if(u <= sin(theta)){
theta.samples = append(theta.samples, theta)
}
}
hist(theta.samples, prob=T, nclass = 25)
x=20
lambda=30
a=2
b=2
theta.samples = NULL
W.samples = NULL
n.samples = NULL
# Initialize the chain
theta = 1
W = 1
iter=2000
for(i in 1:iter){
# Draw theta from full-cond.
theta = rbeta(1, x+a, (W+x)-x+b)
# Draw W from full-cond.
W = rpois(1, (1-theta)*lambda)
# Append samples to list
theta.samples = append(theta.samples, theta)
n.samples = append(n.samples, W+x)
}
# Delete burn-in period
theta.samples = theta.samples[500:length(theta.samples)]
n.samples = theta.samples[500:length(n.samples)]
# Plot the distributions
par(mfrow=c(1,2))
hist(theta.samples, prob=T, nclass=25)
hist(n.samples, prob=T, nclass=25)
setwd('/home/tuomas/R/Projects/DATA.STAT.730/Midterm')
# Initalize the chain
theta.t = 1
theta.samples = NULL
N = 10000 # num of iterations
for(i in 1:N){
# Draw sample from proporsal distribution
theta.star = rnorm(1,0,1)
# Calculate acceptance rate
alpha = (exp(-theta.star)*dnorm(theta.t, 0, 1)) / (exp(-theta.t)*dnorm(theta.star, 0, 1))
# Accept if...
if(log(runif(1)) < log(alpha)){
theta.t = theta.star
}
theta.samples = append(theta.samples, theta.t)
}
# Plot
par(mfrow=c(1,1))
hist(theta.samples, prob=T, nclass=25)
setwd('/home/tuomas/R/Projects/DATA.STAT.730/Midterm')
fn = "Midterm5.jag"
cat("
model{
# Unique linear models for each group
for(i in 1:9){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b11 + b12*(age[i]-60)
}
for(i in 10:18){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b21 + b22*(age[i]-60)
}
for(i in 19:27){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b31 + b32*(age[i]-60)
}
for(i in 28:36){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b41 + b42*(age[i]-60)
}
# Priors
b11 ~ dnorm(0, 0.01) # For group 1
b12 ~ dnorm(0, 0.01)
b21 ~ dnorm(0, 0.01) # For group 2
b22 ~ dnorm(0, 0.01)
b31 ~ dnorm(0, 0.01) # For group 3
b32 ~ dnorm(0, 0.01)
b41 ~ dnorm(0, 0.01) # For group 4
b42 ~ dnorm(0, 0.01)
}",
file=fn)
deaths = c(18,22,19,55,117,170,179,120,120,2,4,3,38,113,173,212,243,253,149,169,193,
576,1001,901,613,337,189,124,140,187,514,778,689,432,214,63)
age = c(40,45,50,55,60,65,70,75,80,40,45,50,55,60,65,70,75,80,40,45,50,55,60,65,70,75,
80,40,45,50,55,60,65,70,75,80)
n = c(656,359,249,632,1067,897,668,361,274,145,104,98,372,846,949,824,667,537,4531,
3030,2267,4682,6052,3880,2033,871,345,3410,2239,1851,3270,3791,2421,1195,436,113)
g = c(1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4)
smoking.data = list(y=deaths, age=age, n=n)
smoking.j = jags.model(file=fn, data=smoking.data, n.chains=3, n.adapt=2000)
smoking.par = c("b11","b12","b21","b22","b31","b32","b41","b42")
smoking.res = coda.samples(model=smoking.j, variable.names=smoking.par, n.iter=10000, thin=10)
summary(smoking.res)
# b)
setwd('/home/tuomas/R/Projects/DATA.STAT.730/Midterm')
fn = "Midterm5b.jag"
cat("
model{
# Unique linear models for each group
for(i in 1:9){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b11 + b12*(age[i]-60)
}
for(i in 10:18){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b21 + b22*(age[i]-60)
}
for(i in 19:27){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b31 + b32*(age[i]-60)
}
for(i in 28:36){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b41 + b42*(age[i]-60)
}
# Priors
b11 ~ dnorm(mu, 0.01) # For group 1
b12 ~ dnorm(mu, 0.01)
b21 ~ dnorm(mu, 0.01) # For group 2
b22 ~ dnorm(mu, 0.01)
b31 ~ dnorm(mu, 0.01) # For group 3
b32 ~ dnorm(mu, 0.01)
b41 ~ dnorm(mu, 0.01) # For group 4
b42 ~ dnorm(mu, 0.01)
# Hyperpriors
mu ~ dnorm(60, 0.01)
}",
file=fn)
deaths = c(18,22,19,55,117,170,179,120,120,2,4,3,38,113,173,212,243,253,149,169,193,
576,1001,901,613,337,189,124,140,187,514,778,689,432,214,63)
age = c(40,45,50,55,60,65,70,75,80,40,45,50,55,60,65,70,75,80,40,45,50,55,60,65,70,75,
80,40,45,50,55,60,65,70,75,80)
n = c(656,359,249,632,1067,897,668,361,274,145,104,98,372,846,949,824,667,537,4531,
3030,2267,4682,6052,3880,2033,871,345,3410,2239,1851,3270,3791,2421,1195,436,113)
g = c(1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4)
smoking.data = list(y=deaths, age=age, n=n)
smoking.j = jags.model(file=fn, data=smoking.data, n.chains=3, n.adapt=2000)
smoking.par = c("b11","b12","b21","b22","b31","b32","b41","b42")
smoking.res = coda.samples(model=smoking.j, variable.names=smoking.par, n.iter=10000, thin=10)
summary(smoking.res)
# b)
setwd('/home/tuomas/R/Projects/DATA.STAT.730/Midterm')
fn = "Midterm5b.jag"
cat("
model{
# Unique linear models for each group
for(i in 1:9){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b11 + b12*(age[i]-60)
}
for(i in 10:18){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b21 + b22*(age[i]-60)
}
for(i in 19:27){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b31 + b32*(age[i]-60)
}
for(i in 28:36){
y[i] ~ dbin(p[i], n[i])
logit(p[i]) = b41 + b42*(age[i]-60)
}
# Priors
b11 ~ dnorm(mu, 0.01) # For group 1
b12 ~ dnorm(mu, 0.01)
b21 ~ dnorm(mu, 0.01) # For group 2
b22 ~ dnorm(mu, 0.01)
b31 ~ dnorm(mu, 0.01) # For group 3
b32 ~ dnorm(mu, 0.01)
b41 ~ dnorm(mu, 0.01) # For group 4
b42 ~ dnorm(mu, 0.01)
# Hyperpriors
mu ~ dnorm(60, 0.01)
}",
file=fn)
deaths = c(18,22,19,55,117,170,179,120,120,2,4,3,38,113,173,212,243,253,149,169,193,
576,1001,901,613,337,189,124,140,187,514,778,689,432,214,63)
age = c(40,45,50,55,60,65,70,75,80,40,45,50,55,60,65,70,75,80,40,45,50,55,60,65,70,75,
80,40,45,50,55,60,65,70,75,80)
n = c(656,359,249,632,1067,897,668,361,274,145,104,98,372,846,949,824,667,537,4531,
3030,2267,4682,6052,3880,2033,871,345,3410,2239,1851,3270,3791,2421,1195,436,113)
g = c(1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4)
smoking.data = list(y=deaths, age=age, n=n)
smoking.j = jags.model(file=fn, data=smoking.data, n.chains=3, n.adapt=2000)
smoking.par = c("b11","b12","b21","b22","b31","b32","b41","b42")
smoking.res = coda.samples(model=smoking.j, variable.names=smoking.par, n.iter=10000, thin=10)
summary(smoking.res)
